set -gx PATH $PATH /opt/homebrew/bin
starship init fish | source
[ -f /opt/homebrew/share/autojump/autojump.fish ]; and source /opt/homebrew/share/autojump/autojump.fish

set -gx VISUAL vim

# settings for fisher plugins
# projects for pj project Jump
set -gx PROJECT_PATHS \
    ~/projects/src/github

# set minimum time for a notifier when command is done. uses franciscolourenco/done
set -U __done_min_cmd_duration 5000 # default: 5000 ms

# set -g fish_user_paths "/usr/local/sbin" $fish_user_paths
# set -l sshrunning (pgrep ssh-agent)
# if test -z "$sshrunning"
#   eval (ssh-agent -c)
#   set -Ux SSH_AUTH_SOCK $SSH_AUTH_SOCK
#   set -Ux SSH_AGENT_PID $SSH_AGENT_PID
#   set -Ux SSH_AUTH_SOCK $SSH_AUTH_SOCK
# end
# set -x HOMEBREW_NO_INSECURE_REDIRECT 1
# set -x HOMEBREW_CASK_OPTS "--require-sha"
# alias d="/usr/local/bin/do"
# alias dr="/usr/local/bin/do -r"
# alias ddev="~/projects/technovangelist/do/lib/index.js"
# alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
# # tabtab source for serverless package
# # uninstall by removing these lines or running `tabtab uninstall serverless`
# [ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.fish ]; and . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.fish
# # tabtab source for sls package
# # uninstall by removing these lines or running `tabtab uninstall sls`
# [ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.fish ]; and . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.fish
# # tabtab source for slss package
# # uninstall by removing these lines or running `tabtab uninstall slss`
# [ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.fish ]; and . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.fish

# set -g FZF_CTRL_T_COMMAND "command find -L \$dir -type f 2> /dev/null | sed '1d; s#^\./##'"

# set -gx DENO_INSTALL "~/.deno"
# abbr pip 'pip3'
# abbr py 'python3'


# set -x DDLABSAUTHDOMAIN {{ secret "kclocal" "prd" "AUTHDOMAIN" }}
# set -x DDLABSCLIENTID {{ secret "kclocal" "prd" "CLIENTID" }}
# set -x DDLABSCLIENTSECRET {{ secret "kclocal" "prd" "CLIENTSECRET" }}
# set -x HYGEN_TMPLS '~/.config/_templates'
# contains $HOME/.fig/bin $fish_user_paths; or set -Ua fish_user_paths $HOME/.fig/bin
# alias lg lazygit
# set -x SSH_AUTH_SOCK ~/Library/Containers/org.hejki.osx.sshce.agent/Data/socket.ssh


# set -x TRAININGTOOLSGITHUBTOKEN {{ secret "ddtrainingtools" "prd" "GHTOKEN" }}
# # The next line updates PATH for the Google Cloud SDK.
# if [ -f '~/Downloads/google-cloud-sdk/path.fish.inc' ]; . '~/Downloads/google-cloud-sdk/path.fish.inc'; end

# function fish_hybrid_key_bindings --description \
# "Vi-style bindings that inherit emacs-style bindings in all modes"
#     for mode in default insert visual
#         fish_default_key_bindings -M $mode
#     end
#     fish_vi_key_bindings --no-erase
# end
# set -g fish_key_bindings fish_hybrid_key_bindings
alias i instruqt
alias it "instruqt track"
alias itp "instruqt track push"
alias ito "instruqt track open"
alias itl "instruqt track logs"
alias itd "instruqt track deploy"
alias itt "instruqt track test"
alias itu "instruqt track upgrade"
alias itv "instruqt track validate"
alias c cat
alias cma "chezmoi add"
alias cm chezmoi
#alias op "if set -q OP_SESSION_my;echo "can op";else; eval (/usr/local/bin/op signin my);echo "now can op";end;"
set -x DOCKER_HOST ssh://docker@docker
set -x AWS_REGION 'us-west-1'
set -x AWS_VAULT_KEYCHAIN_NAME login
set -x AWS_SESSION_TTL 24h
set -x AWS_ASSUME_ROLE_TTL 1h
set -x ddlearning_api_key {{ secret "datadog-keys" "prd" "LTIAPIKEY" }}
set -x ddlearning_app_key {{ secret "datadog-keys" "prd" "LTIAPPKEY" }}
set -x corpsite_api_key {{ secret "datadog-keys" "prd" "CORPSITEAPIKEY" }}
set -x NNN_PLUG "j:autojump"
set -gx N_PREFIX $HOME/.n
set -gx PATH $PATH $DENO_INSTALL/bin $HOME/.krew/bin $HOME/bin /usr/local/opt/qt/bin $HOME/.emacs.d/bin $HOME/.cargo/bin $HOME/.composer/vendor/bin $HOME/go/bin 


function __jump_add --on-variable PWD
  status --is-command-substitution; and return
  jump chdir
end

function __jump_hint
  set -l term (string replace -r '^j ' '' -- (commandline -cp))
  jump hint "$term"
end

function j
  set -l dir (jump cd "$argv")
  test -d "$dir"; and cd "$dir"
end

fzf_key_bindings
complete --command j --exclusive --arguments '(__jump_hint)'
mcfly init fish | source

set -gx KUBECONFIG /Users/matt/kubeconfig-for-proxmoxk3s